services: 
  db: 
    image: postgres:16.3
    container_name: booking_db
    env_file:
      - .env-not-dev
    ports:
      - "5432:5432"
    
  redis:
    image: redis:7
    container_name: booking_redis
    env_file:
      - .env-not-dev

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    command: ['/booking/docker/app.sh']
    ports:
      - "7777:8000"
    env_file:
      - .env-not-dev
    depends_on:
      - db
      - redis

  celery:
    image: celery_image
    build:
      context: .
    container_name: booking_celery
    command: ['/booking/docker/celery.sh', 'celery']
    env_file:
      - .env-not-dev
    depends_on:
      - redis

  celery_beat:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery_beat
    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO -B"
    env_file:
      - .env-not-dev
    depends_on:
      - redis

  flower:
    image: flower_image
    build:
      context: .
    container_name: booking_flower
    command: ['/booking/docker/celery.sh', 'flower']
    env_file:
      - .env-not-dev
    depends_on:
      - redis
    ports:
      - "5555:5555"

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  postgresdata:
  grafanadata:
  prometheusdata: